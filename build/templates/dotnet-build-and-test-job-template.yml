parameters:
  - name: buildConfiguration
    displayName: 'Build Configuration'
    type: string

  - name: backendProjectPath
    displayName: 'Backend project path'
    type: string

  - name: integrationTestsProjectPath
    displayName: 'Integration Tests Project Path'
    default: ' '
    type: string

  - name: unitTestsProjectPath
    displayName: 'Unit Tests Project Path'
    default: ' '
    type: string

jobs:
  - job: 'Build_And_Test_Pack'
    displayName: 'Build & Drop Artifact'
    steps:
      - checkout: self
        fetchDepth: 0

      - task: UseDotNet@2
        displayName: 'Install .NET 6.x SDK'
        inputs:
          packageType: sdk
          version: 6.x

      - task: DotNetCoreCLI@2
        displayName: 'Dotnet restore'
        inputs:
          command: 'restore'
          projects: |
            '${{ parameters.backendProjectPath }}'
            '${{ parameters.integrationTestsProjectPath }}'
          arguments: '--verbosity minimal'

      - task: DotNetCoreCLI@2
        displayName: 'Dotnet build ${{ parameters.buildConfiguration }}'
        inputs:
          command: 'build'
          projects: |
            '${{ parameters.backendProjectPath }}'
            '${{ parameters.integrationTestsProjectPath }}'
          arguments: '-c ${{ parameters.buildConfiguration }} --no-restore'

      - task: DotNetCoreCLI@2
        condition: and(failed(), ne('${{ parameters.unitTestsProjectPath }}', ''))
        displayName: 'Run unit tests'
        inputs:
          command: 'test'
          projects: '${{ parameters.unitTestsProjectPath }}'

      - task: DotNetCoreCLI@2
        condition: and(failed(), ne('${{ parameters.integrationTestsProjectPath }}', ''))
        displayName: 'Run integration tests'
        inputs:
          command: 'test'
          projects: '${{ parameters.integrationTestsProjectPath }}'
          arguments: '--no-restore'

      - task: PublishTestResults@2
        inputs:
          testRunner: VSTest
          testResultsFiles: '$(Agent.TempDirectory)/**/*.trx'

      - task: DotNetCoreCLI@2
        displayName: 'Dotnet Publish'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '${{ parameters.backendProjectPath }}'
          arguments: '-c ${{ parameters.buildConfiguration }} -o $(Build.ArtifactStagingDirectory)/${{ parameters.buildConfiguration }} --no-build'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifacts'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'