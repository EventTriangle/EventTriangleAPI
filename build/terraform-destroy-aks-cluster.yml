#trigger: none
#pr:
#  paths:
#    include:
#      - terraform
#      - build/terraform-plan-apply.yml
#    exclude:
#      - terraform/README.md

trigger: none
pr: none

variables:
  - group: terraform_storage_configuration
  - group: AKS_Settings
  - group: Connection_Settings
  - name: planStageName
    value: "Terraform_Plan_Destroy_AKS_Cluster"
  - name: applyStageName
    value: "Terraform_Apply_Destroy_AKS_Cluster"

stages:
  - template: templates/terraform-plan-destroy-stages.yml
    parameters:
      stageName: ${{ variables.planStageName }}
      VmImage: ubuntu-latest
      terraformVersion: latest
      workingDirectory: $(System.DefaultWorkingDirectory)/terraform
      storageAccount: $(library-storage-account)
      storageContainer: $(library-storage-container)
      stateFile: $(library-state-file)
      sasToken: $(library-sas-token)
      prefix: $(library-prefix)
      subscriptionId: $(library-subscription-id)
      clientId: $(library-client-id)
      clientSecret: $(library-client-secret)
      tenantId: $(library-tenant-id)

  - template: templates/terraform-apply-stages.yml
    parameters:
      stageName: ${{ variables.applyStageName }}
      VmImage: ubuntu-latest
      terraformVersion: latest
      workingDirectory: $(System.DefaultWorkingDirectory)/terraform
      storageAccount: $(library-storage-account)
      storageContainer: $(library-storage-container)
      stateFile: $(library-state-file)
      sasToken: $(library-sas-token)
      subscriptionId: $(library-subscription-id)
      clientId: $(library-client-id)
      clientSecret: $(library-client-secret)
      tenantId: $(library-tenant-id)
      environment: 'aks'
      dependsOn: [ '${{ variables.planStageName }}' ]
      condition: ${{ variables.planStageName }}
