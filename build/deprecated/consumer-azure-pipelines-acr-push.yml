trigger:
  batch: true
  branches:
    include:
      - develop
      - main
  paths:
    include:
      - build
      - src/authorization/EventTriangleAPI.Authorization.BusinessLogic
      - src/authorization/EventTriangleAPI.Authorization.Presentation
      - src/shared/EventTriangleAPI.Shared.Application
      - src/shared/EventTriangleAPI.Shared.DTO

pr:
  branches:
    include:
      - develop
      - main
  paths:
    include:
      - build
      - src/authorization/EventTriangleAPI.Authorization.BusinessLogic
      - src/authorization/EventTriangleAPI.Authorization.Presentation
      - src/shared/EventTriangleAPI.Shared.Application
      - src/shared/EventTriangleAPI.Shared.DTO

variables:
  - name: appName
    value: 'ConsumerAPI'
  - name: System.Debug
    value: 'false'
  - group: AKS_Settings
  - group: Prefix_Library

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: 'Build_${{ variables.appName }}'
    displayName: 'Build_${{ variables.appName }}'
    jobs:
      - template: templates/docker-build-push-acr-jobs.yml
        parameters:
          JobName: 'Build_${{ variables.appName }}'
          solution: '$(System.DefaultWorkingDirectory)/EventTriangleAPI.sln'
          buildConfiguration: 'Release'
          backendProjectPath: '$(System.DefaultWorkingDirectory)/src/consumer/EventTriangleAPI.Consumer.Presentation'
          unitTestsProjectPath: '$(System.DefaultWorkingDirectory)/src/consumer/EventTriangleAPI.Consumer.UnitTests/EventTriangleAPI.Consumer.UnitTests.csproj'
          shouldRunIntegrationTests: 'true'
          shouldRunUnitTests: 'true'
          integrationTestsProjectPath: '$(System.DefaultWorkingDirectory)/src/consumer/EventTriangleAPI.Consumer.IntegrationTests/EventTriangleAPI.Consumer.IntegrationTests.csproj'
          dockerRegistryUrl: 'azuredevopsacrd01.azurecr.io'
          imageRepository: 'consumer-service'
          dockerfilePath: '$(System.DefaultWorkingDirectory)/src/consumer/Dockerfile'
          dockerServiceConnection: 'Azure_ACR_Connection'
